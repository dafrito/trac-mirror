= Trac Installation Guide for 0.12dev = 
{{{
#!div style="margin-top: .5em; padding: 0 1em; background-color: #ffd; border:1px outset #ddc;"

  '''NOTE: this page is for 0.12dev (trunk), the version currently in development. For installing previous Trac versions, please refer to TracInstall (0.11)'''
}}}
[[TracGuideToc]]

Trac is written in the Python programming language and needs a database, [http://sqlite.org/ SQLite], [http://www.postgresql.org/ PostgreSQL], or [http://mysql.com/ MySQL]. For HTML rendering, Trac uses the [http://genshi.edgewall.org Genshi] templating system.

Since version 0.12, Trac can also be localized, and there's probably a translation available for your language. If you want to be able to use the Trac interface in other languages, then make sure you have installed the optional package [#OtherPythonPackages Babel]. Pay attention to the extra steps for localization support in the [#InstallingTrac Installing Trac] section below. Note Trac can still be installed without Babel, but then you will only get the default english version, as usual.

If you're interested in contributing new translations for other languages or enhance the existing translations, then please have a look at ["TracL10N"].

What follows are generic instructions for installing and setting up Trac and its requirements. While you may find instructions for installing Trac on specific systems at TracInstallPlatforms on the main Trac site, please be sure to '''first read through these general instructions''' to get a good understanding of the tasks involved.


== Prerequisites ==

To install Trac, the following software packages must be installed:

 * [http://www.python.org/ Python], version >= 2.4 (we dropped the support for Python 2.3 in this release)
 * [http://peak.telecommunity.com/DevCenter/setuptools setuptools], version >= 0.6
 * [http://genshi.edgewall.org/wiki/Download Genshi], [genshi:source:trunk trunk], from svn, minimum required revision is [G1072].
 * You also need a database system and the corresponding python drivers for it.
   The database can be either SQLite, PostgreSQL or MySQL.

=== For SQLite ===

If you're using Python 2.5 or 2.6, you already have everything you need.

If you're using Python 2.4 and need pysqlite, you can download from 
[http://code.google.com/p/pysqlite/downloads/list google code] the Windows
installers or the tar.gz archive for building from source: 
{{{
$ tar xvfz <version>.tar.gz 
$ cd <version> 
$ python setup.py build_static install 
}}}
 
That way, the latest SQLite version will be downloaded and built into the 
bindings. 

SQLite 2.x is no longer supported. For SQLite 3.x, the pysqlite 1.1.x
bindings are also no longer supported, use pysqlite 2.x.

See additional information in [trac:PySqlite PySqlite].

=== For PostgreSQL ===

You need to install the database and its Python bindings:
 * [http://www.postgresql.org/ PostgreSQL]
 * [http://initd.org/projects/psycopg2 psycopg2]

See [trac:DatabaseBackend#Postgresql DatabaseBackend] for details


=== For MySQL ===

Trac can now work quite well with MySQL, provided you follow the guidelines.

 * [http://mysql.com/ MySQL], version 5.0 or later
 * [http://sf.net/projects/mysql-python MySQLdb], version 1.2.2 or later

See [trac:MySqlDb MySqlDb] for more detailed information.
It is ''very'' important to read carefully that page before creating the database.

=== Optional Requirements ===

==== Version Control System ====

===== Subversion =====
'''Please note:''' if using Subversion, Trac must be installed on the '''same machine'''. Remote repositories are currently not supported.

 * [http://subversion.tigris.org/ Subversion], version >= 1.0. (versions recommended: 1.2.4, 1.3.2 or 1.4.2) and the '''''corresponding''''' Python bindings. For troubleshooting, check [trac:TracSubversion TracSubversion]
   [[br]] ''FIXME'' upgrade the requirements; it makes no sense to still support 1.0 or even 1.3, as Subversion itself only still supports 1.4.x
   * Trac uses the [http://svnbook.red-bean.com/svnbook-1.1/ch08s02.html#svn-ch-8-sect-2.3 SWIG] bindings included in the Subversion distribution, '''not''' [http://pysvn.tigris.org/ PySVN] (which is sometimes confused with the standard SWIG bindings), neither does it support the newer `ctype`-style bindings
   * If Subversion was already installed without the SWIG bindings, on Unix you'll need to re-`configure` Subversion and `make swig-py`, `make install-swig-py`.
   * There are [http://subversion.tigris.org/servlets/ProjectDocumentList?folderID=91 pre-compiled bindings] available for win32. 

===== Others =====

Support for other version control systems is provided via third-parties. See [trac:PluginList PluginList] and [trac:VersioningSystemBackend VersioningSystemBackend].

==== Web Server ====
 * A CGI-capable web server (see TracCgi), '''but usage of Trac as a cgi script 
   is highly discouraged''', better use one of the following options, 
 * a [http://www.fastcgi.com/ FastCGI]-capable web server (see TracFastCgi), or
 * an [http://tomcat.apache.org/connectors-doc/ajp/ajpv13a.html AJP]-capable web
   server (see [trac:TracOnWindowsIisAjp TracOnWindowsIisAjp]), or
 * [http://httpd.apache.org/ Apache] with 
   - [http://code.google.com/p/modwsgi/ mod_wsgi], see [wiki:TracModWSGI] or 
     http://code.google.com/p/modwsgi/wiki/IntegrationWithTrac
   - [http://modpython.org/ mod_python 3.3.1], see TracModPython)
   

==== Other Python Packages ====

 * [http://babel.edgewall.org Babel], version >= 0.9.4, 
   needed for localization support
 * [http://docutils.sourceforge.net/ docutils], version >= 0.3.9 
   for WikiRestructuredText.
 * [http://pygments.pocoo.org Pygments] for 
   [wiki:TracSyntaxColoring syntax highlighting].
   [http://silvercity.sourceforge.net/ SilverCity] and/or 
   [http://gnu.org/software/enscript/enscript.html Enscript] may still be used
   but are deprecated and you really should be using Pygments.
 * [http://pytz.sf.net pytz] to get a complete list of time zones,
   otherwise Trac will fall back on a shorter list from 
   an internal time zone implementation.

'''Attention''': The various available versions of these dependencies are not necessarily interchangable, so please pay attention to the version numbers above. If you are having trouble getting Trac to work please double-check all the dependencies before asking for help on the [trac:MailingList MailingList] or [trac:IrcChannel IrcChannel].

Please refer to the documentation of these packages to find out how they are best installed. In addition, most of the [trac:TracInstallPlatforms platform-specific instructions] also describe the installation of the dependencies. Keep in mind however that the information there ''probably concern older versions of Trac than the one you're installing'' (there are even some pages that are still talking about Trac 0.8!).


== Installing Trac ==

One way to install Trac is using `setuptools`.
With setuptools you can install Trac from the subversion repository; for example,
to install release version 0.12dev do:
{{{
easy_install http://svn.edgewall.org/repos/trac/trunk
}}}

But of course the python-typical setup at the top of the source directory also works:
{{{
$ python ./setup.py install
}}}
See SubversionRepository for details about getting the source.

''Note 1: you'll need root permissions or equivalent for this step.'' [[br]]
''Note 2: installing from source is the preferred method if you want to have a localized version of Trac'' [[br]]

This will byte-compile the python source code and install it as an .egg file or folder in the `site-packages` directory
of your Python installation. The .egg will also contain all other resources needed by standard Trac, such as htdocs and templates.

The script will also install the [wiki:TracAdmin trac-admin] command-line tool, used to create and maintain [wiki:TracEnvironment project environments], as well as the [wiki:TracStandalone tracd] standalone server.

If you want to make Trac available in other languages, make sure you have installed Babel and then run this additional step before doing the `install` (or simply redo the `install` afterwards):
{{{
$ python ./setup.py compile_catalog -f
}}}
(the `-f` flag is needed as long as some translations are marked ''fuzzy'', i.e. incomplete, which will most probably be the case during the whole development period, as  strings are continuously added or modified)


=== Advanced Options ===

To install Trac to a custom location, or find out about other advanced installation options, run:
{{{
easy_install --help
}}}

Also see [http://docs.python.org/inst/inst.html Installing Python Modules] for detailed information.

Specifically, you might be interested in:
{{{
easy_install --prefix=/path/to/installdir
}}}
or, if installing Trac to a Mac OS X system:
{{{
easy_install --prefix=/usr/local --install-dir=/Library/Python/2.5/site-packages
}}}

The above will place your `tracd` and `trac-admin` commands into `/usr/local/bin` and will install the Trac libraries and dependencies into `/Library/Python/2.5/site-packages`, which is Apple's preferred location for third-party Python application installations.


== Creating a Project Environment ==

A [wiki:TracEnvironment Trac environment] is the backend storage where Trac stores information like wiki pages, tickets, reports, settings, etc. An environment is basically a directory that contains a human-readable configuration file and various other files and directories.

A new environment is created using [wiki:TracAdmin trac-admin]:
{{{
$ trac-admin /path/to/myproject initenv
}}}

[wiki:TracAdmin trac-admin] will prompt you for the information it needs to create the environment, such as the name of the project, the type and the path to an existing [wiki:TracEnvironment#SourceCodeRepository source code repository], the [wiki:TracEnvironment#DatabaseConnectionStrings database connection string], and so on. If you're not sure what to specify for one of these options, just leave it blank to use the default value. The database connection string in particular will always work as long as you have SQLite installed. Leaving the path to the source code repository empty will disable any functionality related to version control, but you can always add that back when the basic system is running.

Also note that the values you specify here can be changed later by directly editing the [wiki:TracIni] configuration file.

''Note: The user account under which the web server runs will require write permissions to the environment directory and all the files inside.  On Linux, with the web server running as user apache and group apache, enter:''

  chown -R apache.apache /path/to/myproject

== Running the Standalone Server ==

After having created a Trac environment, you can easily try the web interface by running the standalone server [wiki:TracStandalone tracd]:
{{{
$ tracd --port 8000 /path/to/myproject
}}}

Then, fire up a browser and visit `http://localhost:8000/`. You should get a simple listing of all environments that tracd knows about. Follow the link to the environment you just created, and you should see Trac in action. If you only plan on managing a single project with trac you can have the standalone server skip the environment list by starting it like this:
{{{
$ tracd -s --port 8000 /path/to/myproject
}}}

== Running Trac on a Web Server ==

Trac provides three options for connecting to a "real" web server: [wiki:TracCgi CGI], [wiki:TracFastCgi FastCGI] and [wiki:TracModPython mod_python]. For decent performance, it is recommended that you use either FastCGI or mod_python.


Trac also supports [trac:TracOnWindowsIisAjp AJP] which may be your choice if you want to connect to IIS.

==== Generating the Trac cgi-bin directory ====

In order for Trac to function properly with FastCGI or mod_python, you need to have a trac.cgi file. This is an executable which loads the appropriate Python code. It can be generated using the `deploy` option of [wiki:TracAdmin trac-admin].

There is, however, a bit of a chicken-and-egg problem. The [wiki:TracAdmin trac-admin] command requires an existing environment to function, but complains if the deploy directory already exists. This is a problem, because environments are often stored in a subdirectory of the deploy. The solution is to do something like this:
{{{
mkdir -p /usr/share/trac/projects/my-project
trac-admin /usr/share/trac/projects/my-project initenv
trac-admin /usr/share/trac/projects/my-project deploy /tmp/deploy
mv /tmp/deploy/* /usr/share/trac
}}}

==== Setting up the Plugin Cache ====

Some Python plugins need to be extracted to a cache directory. By default the cache resides in the home directory of the current user. When running Trac on a Web Server as a dedicated user (which is highly recommended) who has no home directory, this might prevent the plugins from starting. To override the cache location you can set the PYTHON_EGG_CACHE environment variable. Refer to your server documentation for detailed instructions.

== Configuring Authentication ==

The process of adding, removing, and configuring user accounts for authentication depends on the specific way you run Trac. The basic procedure is described in the [wiki:TracCgi#AddingAuthentication "Adding Authentication"] section on the TracCgi page. To learn how to setup authentication for the frontend you're using, please refer to one of the following pages:

 * TracStandalone if you use the standalone server, `tracd`.
 * TracCgi if you use the CGI or FastCGI methods.
 * TracModPython if you use the mod_python method.


== Using Trac ==

Once you have your Trac site up and running, you should be able to browse your subversion repository, create tickets, view the timeline, etc.

Keep in mind that anonymous (not logged in) users can by default access most but not all of the features. You will need to configure authentication and grant additional [wiki:TracPermissions permissions] to authenticated users to see the full set of features.

'' Enjoy! ''

[trac:TracTeam The Trac Team]

----
See also: [trac:TracInstallPlatforms TracInstallPlatforms], TracGuide, TracCgi, TracFastCgi, TracModPython, [wiki:TracModWSGI], TracUpgrade, TracPermissions

